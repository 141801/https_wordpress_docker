version: '3.1'

services:

  nginx:
    image: nginx:latest
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      - wordpress
    restart: always   
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/conf.d:/etc/nginx/conf.d
      - ./nginx/log:/var/log/nginx
      - ./wordpress:/var/www/html
      - ./dh-param/dhparam-2048.pem:/etc/ssl/certs/dhparam-2048.pem
      - /docker-volumes/etc/letsencrypt/live/vraku.work/fullchain.pem:/etc/letsencrypt/live/vraku.work/fullchain.pem
      - /docker-volumes/etc/letsencrypt/live/vraku.work/privkey.pem:/etc/letsencrypt/live/vraku.work/privkey.pem
    networks:
      - docker-network

  mysql:
    image: mysql:5.7
    volumes:
      - ./mysql:/var/lib/mysql
    environment:
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
      - MYSQL_USER=${MYSQL_USER}
      - MYSQL_PASSWORD=${MYSQL_PASSWORD}
      - MYSQL_DATABASE=${MYSQL_DATABASE}
    restart: always
    networks:
      - docker-network

  wordpress:
    image: wordpress:php7.3-fpm
    environment:
      - WORDPRESS_DB_HOST=${WORDPRESS_DB_HOST}
      - WORDPRESS_DB_USER=${WORDPRESS_DB_USER}
      - WORDPRESS_DB_PASSWORD=${WORDPRESS_DB_PASSWORD}
      - WORDPRESS_DB_NAME=${WORDPRESS_DB_NAME}
    volumes:
      - ./wordpress:/var/www/html
    depends_on:
      - mysql
    restart: always
    networks:
      - docker-network  

networks:
  docker-network:
    driver: bridge
